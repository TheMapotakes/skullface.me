// Spacer variables
$spacer: 0.5em;

$spacer-1: $spacer;
$spacer-2: $spacer * 2;
$spacer-3: $spacer * 3;
$spacer-4: $spacer * 4;
$spacer-5: $spacer * 5;
$spacer-6: $spacer * 6;
$spacer-7: $spacer * 7;
$spacer-8: $spacer * 8;

$spacer-0: 0;
$spacer-half: $spacer-1 * .5;
$spacer-quarter: $spacer-1 * .25;

// Breakpoints
$width-xs: 0 !default;
// Small screen / phone
$width-sm: 544px !default;
// Medium screen / tablet
$width-md: 768px !default;
// Large screen / desktop (980 + (16 * 2)) <= container + gutters
$width-lg: 1012px !default;
// Extra large screen / wide desktop
$width-xl: 1280px !default;

$breakpoints: (
  sm: $width-sm,
  md: $width-md,
  lg: $width-lg,
  xl: $width-xl
) !default;

$responsive-variants: (
  "": "",
  sm: "-sm",
  md: "-md",
  lg: "-lg",
  xl: "-xl",
) !default;


@mixin breakpoint($breakpoint) {
  @if $breakpoint == "" {
    @content;
  }

  @else {
    // Retrieves the value from the key
    $value: map-get($breakpoints, $breakpoint);

    // If the key exists in the map
    @if $value != null {
      // Prints a media query based on the value
      @media (min-width: $value) {
        @content;
      }
    }

    // If the key doesn't exist in the map
    @else {
      @warn "Unfortunately, no value could be retrieved from `#{$breakpoint}`. "
        + "Please make sure it is defined in `$breakpoints` map.";
    }
  }
}

// Margin utilities
%margin-bottom-condensed {
  margin-bottom: $spacer-2;
}
    
%margin-bottom-default {
  margin-bottom: $spacer-4;
}

%margin-bottom-spacious {
  margin-bottom: $spacer-6;
}

%margin-top {
  margin-top: $spacer-8;
}

// Layout utilities
%flex-md-center-vertical {
  @include breakpoint(md) {
    display: flex;
    justify-content: center;
    align-items: center;
  }
}

%width-md-clipped {
  @include breakpoint(md) {
    width: 80%;
  }
}

%width-lg-clipped {
  @include breakpoint(lg) {
    width: 80%;
  }
}